/* tslint:disable */
/* eslint-disable */
/**
 * PortIQ API
 * PortIQ API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  SocialLogin,
} from '../models/index';
import {
    SocialLoginFromJSON,
    SocialLoginToJSON,
} from '../models/index';

export interface DjRestAuthGoogleCreateRequest {
    socialLogin?: SocialLogin;
}

/**
 * 
 */
export class DjRestAuthApi extends runtime.BaseAPI {

    /**
     * class used for social authentications example usage for facebook with access_token ------------- from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter  class FacebookLogin(SocialLoginView):     adapter_class = FacebookOAuth2Adapter -------------  example usage for facebook with code  ------------- from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter from allauth.socialaccount.providers.oauth2.client import OAuth2Client  class FacebookLogin(SocialLoginView):     adapter_class = FacebookOAuth2Adapter     client_class = OAuth2Client     callback_url = \'localhost:8000\' -------------
     */
    async djRestAuthGoogleCreateRaw(requestParameters: DjRestAuthGoogleCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SocialLogin>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        const response = await this.request({
            path: `/dj-rest-auth/google/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SocialLoginToJSON(requestParameters['socialLogin']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SocialLoginFromJSON(jsonValue));
    }

    /**
     * class used for social authentications example usage for facebook with access_token ------------- from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter  class FacebookLogin(SocialLoginView):     adapter_class = FacebookOAuth2Adapter -------------  example usage for facebook with code  ------------- from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter from allauth.socialaccount.providers.oauth2.client import OAuth2Client  class FacebookLogin(SocialLoginView):     adapter_class = FacebookOAuth2Adapter     client_class = OAuth2Client     callback_url = \'localhost:8000\' -------------
     */
    async djRestAuthGoogleCreate(requestParameters: DjRestAuthGoogleCreateRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SocialLogin> {
        const response = await this.djRestAuthGoogleCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
