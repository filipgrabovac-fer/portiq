/* tslint:disable */
/* eslint-disable */
/**
 * PortIQ API
 * PortIQ API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GetLinkedinData,
  PutLinkedinData,
} from '../models/index';
import {
    GetLinkedinDataFromJSON,
    GetLinkedinDataToJSON,
    PutLinkedinDataFromJSON,
    PutLinkedinDataToJSON,
} from '../models/index';

export interface LinkedinDataUpdateDetailsUpdateRequest {
    putLinkedinData?: PutLinkedinData;
}

/**
 * 
 */
export class LinkedinDataApi extends runtime.BaseAPI {

    /**
     */
    async linkedinDataDetailsRetrieveRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetLinkedinData>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        const response = await this.request({
            path: `/api/linkedin-data/details/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetLinkedinDataFromJSON(jsonValue));
    }

    /**
     */
    async linkedinDataDetailsRetrieve(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetLinkedinData> {
        const response = await this.linkedinDataDetailsRetrieveRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async linkedinDataUpdateDetailsUpdateRaw(requestParameters: LinkedinDataUpdateDetailsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        const response = await this.request({
            path: `/api/linkedin-data/update-details/`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: PutLinkedinDataToJSON(requestParameters['putLinkedinData']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async linkedinDataUpdateDetailsUpdate(requestParameters: LinkedinDataUpdateDetailsUpdateRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.linkedinDataUpdateDetailsUpdateRaw(requestParameters, initOverrides);
    }

}
