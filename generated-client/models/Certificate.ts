/* tslint:disable */
/* eslint-disable */
/**
 * PortIQ API
 * PortIQ API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Certificate
 */
export interface Certificate {
    /**
     * 
     * @type {number}
     * @memberof Certificate
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Certificate
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Certificate
     */
    description: string;
    /**
     * 
     * @type {Date}
     * @memberof Certificate
     */
    startDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Certificate
     */
    endDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof Certificate
     */
    location?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Certificate
     */
    link?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Certificate
     */
    readonly createdAt: Date;
}

/**
 * Check if a given object implements the Certificate interface.
 */
export function instanceOfCertificate(value: object): value is Certificate {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function CertificateFromJSON(json: any): Certificate {
    return CertificateFromJSONTyped(json, false);
}

export function CertificateFromJSONTyped(json: any, ignoreDiscriminator: boolean): Certificate {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'description': json['description'],
        'startDate': json['start_date'] == null ? undefined : (new Date(json['start_date'])),
        'endDate': json['end_date'] == null ? undefined : (new Date(json['end_date'])),
        'location': json['location'] == null ? undefined : json['location'],
        'link': json['link'] == null ? undefined : json['link'],
        'createdAt': (new Date(json['created_at'])),
    };
}

export function CertificateToJSON(json: any): Certificate {
    return CertificateToJSONTyped(json, false);
}

export function CertificateToJSONTyped(value?: Omit<Certificate, 'created_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'description': value['description'],
        'start_date': value['startDate'] == null ? undefined : ((value['startDate']).toISOString()),
        'end_date': value['endDate'] == null ? undefined : ((value['endDate']).toISOString()),
        'location': value['location'],
        'link': value['link'],
    };
}

