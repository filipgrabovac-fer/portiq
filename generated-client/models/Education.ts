/* tslint:disable */
/* eslint-disable */
/**
 * PortIQ API
 * PortIQ API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypeEnum } from './TypeEnum';
import {
    TypeEnumFromJSON,
    TypeEnumFromJSONTyped,
    TypeEnumToJSON,
    TypeEnumToJSONTyped,
} from './TypeEnum';

/**
 * 
 * @export
 * @interface Education
 */
export interface Education {
    /**
     * 
     * @type {number}
     * @memberof Education
     */
    readonly idEducation: number;
    /**
     * 
     * @type {string}
     * @memberof Education
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Education
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof Education
     */
    location: string;
    /**
     * 
     * @type {TypeEnum}
     * @memberof Education
     */
    type: TypeEnum;
    /**
     * 
     * @type {Date}
     * @memberof Education
     */
    startDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof Education
     */
    endDate: Date;
    /**
     * 
     * @type {string}
     * @memberof Education
     */
    link?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Education
     */
    readonly createdAt: Date;
}



/**
 * Check if a given object implements the Education interface.
 */
export function instanceOfEducation(value: object): value is Education {
    if (!('idEducation' in value) || value['idEducation'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('location' in value) || value['location'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('startDate' in value) || value['startDate'] === undefined) return false;
    if (!('endDate' in value) || value['endDate'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function EducationFromJSON(json: any): Education {
    return EducationFromJSONTyped(json, false);
}

export function EducationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Education {
    if (json == null) {
        return json;
    }
    return {
        
        'idEducation': json['id_education'],
        'title': json['title'],
        'description': json['description'],
        'location': json['location'],
        'type': TypeEnumFromJSON(json['type']),
        'startDate': (new Date(json['start_date'])),
        'endDate': (new Date(json['end_date'])),
        'link': json['link'] == null ? undefined : json['link'],
        'createdAt': (new Date(json['created_at'])),
    };
}

export function EducationToJSON(json: any): Education {
    return EducationToJSONTyped(json, false);
}

export function EducationToJSONTyped(value?: Omit<Education, 'id_education'|'created_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'description': value['description'],
        'location': value['location'],
        'type': TypeEnumToJSON(value['type']),
        'start_date': ((value['startDate']).toISOString().substring(0,10)),
        'end_date': ((value['endDate']).toISOString().substring(0,10)),
        'link': value['link'],
    };
}

