/* tslint:disable */
/* eslint-disable */
/**
 * PortIQ API
 * PortIQ API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CodeType } from './CodeType';
import {
    CodeTypeFromJSON,
    CodeTypeFromJSONTyped,
    CodeTypeToJSON,
    CodeTypeToJSONTyped,
} from './CodeType';

/**
 * 
 * @export
 * @interface GetComponentCode
 */
export interface GetComponentCode {
    /**
     * 
     * @type {CodeType}
     * @memberof GetComponentCode
     */
    info: CodeType;
    /**
     * 
     * @type {CodeType}
     * @memberof GetComponentCode
     */
    skills: CodeType;
    /**
     * 
     * @type {CodeType}
     * @memberof GetComponentCode
     */
    languages: CodeType;
    /**
     * 
     * @type {CodeType}
     * @memberof GetComponentCode
     */
    projects: CodeType;
    /**
     * 
     * @type {CodeType}
     * @memberof GetComponentCode
     */
    certificates: CodeType;
    /**
     * 
     * @type {CodeType}
     * @memberof GetComponentCode
     */
    education: CodeType;
    /**
     * 
     * @type {CodeType}
     * @memberof GetComponentCode
     */
    hobbies: CodeType;
    /**
     * 
     * @type {CodeType}
     * @memberof GetComponentCode
     */
    other: CodeType;
    /**
     * 
     * @type {CodeType}
     * @memberof GetComponentCode
     */
    references: CodeType;
    /**
     * 
     * @type {CodeType}
     * @memberof GetComponentCode
     */
    workExperiences: CodeType;
}

/**
 * Check if a given object implements the GetComponentCode interface.
 */
export function instanceOfGetComponentCode(value: object): value is GetComponentCode {
    if (!('info' in value) || value['info'] === undefined) return false;
    if (!('skills' in value) || value['skills'] === undefined) return false;
    if (!('languages' in value) || value['languages'] === undefined) return false;
    if (!('projects' in value) || value['projects'] === undefined) return false;
    if (!('certificates' in value) || value['certificates'] === undefined) return false;
    if (!('education' in value) || value['education'] === undefined) return false;
    if (!('hobbies' in value) || value['hobbies'] === undefined) return false;
    if (!('other' in value) || value['other'] === undefined) return false;
    if (!('references' in value) || value['references'] === undefined) return false;
    if (!('workExperiences' in value) || value['workExperiences'] === undefined) return false;
    return true;
}

export function GetComponentCodeFromJSON(json: any): GetComponentCode {
    return GetComponentCodeFromJSONTyped(json, false);
}

export function GetComponentCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetComponentCode {
    if (json == null) {
        return json;
    }
    return {
        
        'info': CodeTypeFromJSON(json['info']),
        'skills': CodeTypeFromJSON(json['skills']),
        'languages': CodeTypeFromJSON(json['languages']),
        'projects': CodeTypeFromJSON(json['projects']),
        'certificates': CodeTypeFromJSON(json['certificates']),
        'education': CodeTypeFromJSON(json['education']),
        'hobbies': CodeTypeFromJSON(json['hobbies']),
        'other': CodeTypeFromJSON(json['other']),
        'references': CodeTypeFromJSON(json['references']),
        'workExperiences': CodeTypeFromJSON(json['work_experiences']),
    };
}

export function GetComponentCodeToJSON(json: any): GetComponentCode {
    return GetComponentCodeToJSONTyped(json, false);
}

export function GetComponentCodeToJSONTyped(value?: GetComponentCode | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'info': CodeTypeToJSON(value['info']),
        'skills': CodeTypeToJSON(value['skills']),
        'languages': CodeTypeToJSON(value['languages']),
        'projects': CodeTypeToJSON(value['projects']),
        'certificates': CodeTypeToJSON(value['certificates']),
        'education': CodeTypeToJSON(value['education']),
        'hobbies': CodeTypeToJSON(value['hobbies']),
        'other': CodeTypeToJSON(value['other']),
        'references': CodeTypeToJSON(value['references']),
        'work_experiences': CodeTypeToJSON(value['workExperiences']),
    };
}

