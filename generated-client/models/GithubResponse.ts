/* tslint:disable */
/* eslint-disable */
/**
 * PortIQ API
 * PortIQ API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GithubResponse
 */
export interface GithubResponse {
    /**
     * 
     * @type {number}
     * @memberof GithubResponse
     */
    publicRepos: number;
    /**
     * 
     * @type {number}
     * @memberof GithubResponse
     */
    followers: number;
    /**
     * 
     * @type {number}
     * @memberof GithubResponse
     */
    following: number;
    /**
     * 
     * @type {string}
     * @memberof GithubResponse
     */
    avatarUrl: string;
    /**
     * 
     * @type {string}
     * @memberof GithubResponse
     */
    githubUrl: string;
}

/**
 * Check if a given object implements the GithubResponse interface.
 */
export function instanceOfGithubResponse(value: object): value is GithubResponse {
    if (!('publicRepos' in value) || value['publicRepos'] === undefined) return false;
    if (!('followers' in value) || value['followers'] === undefined) return false;
    if (!('following' in value) || value['following'] === undefined) return false;
    if (!('avatarUrl' in value) || value['avatarUrl'] === undefined) return false;
    if (!('githubUrl' in value) || value['githubUrl'] === undefined) return false;
    return true;
}

export function GithubResponseFromJSON(json: any): GithubResponse {
    return GithubResponseFromJSONTyped(json, false);
}

export function GithubResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GithubResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'publicRepos': json['public_repos'],
        'followers': json['followers'],
        'following': json['following'],
        'avatarUrl': json['avatar_url'],
        'githubUrl': json['github_url'],
    };
}

export function GithubResponseToJSON(json: any): GithubResponse {
    return GithubResponseToJSONTyped(json, false);
}

export function GithubResponseToJSONTyped(value?: GithubResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'public_repos': value['publicRepos'],
        'followers': value['followers'],
        'following': value['following'],
        'avatar_url': value['avatarUrl'],
        'github_url': value['githubUrl'],
    };
}

