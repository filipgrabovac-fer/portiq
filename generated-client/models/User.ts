/* tslint:disable */
/* eslint-disable */
/**
 * PortIQ API
 * PortIQ API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {number}
     * @memberof User
     */
    readonly idUser: number;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    phoneNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    imageUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    address?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    city?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    state?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    zipCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    country?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    githubUsername?: string | null;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    if (!('idUser' in value) || value['idUser'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'idUser': json['id_user'],
        'firstName': json['first_name'],
        'lastName': json['last_name'],
        'email': json['email'],
        'phoneNumber': json['phone_number'] == null ? undefined : json['phone_number'],
        'imageUrl': json['image_url'] == null ? undefined : json['image_url'],
        'address': json['address'] == null ? undefined : json['address'],
        'city': json['city'] == null ? undefined : json['city'],
        'state': json['state'] == null ? undefined : json['state'],
        'zipCode': json['zip_code'] == null ? undefined : json['zip_code'],
        'country': json['country'] == null ? undefined : json['country'],
        'createdAt': (new Date(json['created_at'])),
        'githubUsername': json['github_username'] == null ? undefined : json['github_username'],
    };
}

export function UserToJSON(json: any): User {
    return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: Omit<User, 'id_user'|'created_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'first_name': value['firstName'],
        'last_name': value['lastName'],
        'email': value['email'],
        'phone_number': value['phoneNumber'],
        'image_url': value['imageUrl'],
        'address': value['address'],
        'city': value['city'],
        'state': value['state'],
        'zip_code': value['zipCode'],
        'country': value['country'],
        'github_username': value['githubUsername'],
    };
}

