/* tslint:disable */
/* eslint-disable */
/**
 * PortIQ API
 * PortIQ API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserDetails
 */
export interface UserDetails {
    /**
     * 
     * @type {{ [key: string]: string | null; }}
     * @memberof UserDetails
     */
    info: { [key: string]: string | null; };
    /**
     * 
     * @type {Array<Array<string | null>>}
     * @memberof UserDetails
     */
    certificates: Array<Array<string | null>>;
    /**
     * 
     * @type {Array<Array<string | null>>}
     * @memberof UserDetails
     */
    education: Array<Array<string | null>>;
    /**
     * 
     * @type {Array<Array<string | null>>}
     * @memberof UserDetails
     */
    skills: Array<Array<string | null>>;
    /**
     * 
     * @type {Array<Array<string | null>>}
     * @memberof UserDetails
     */
    projects: Array<Array<string | null>>;
    /**
     * 
     * @type {Array<Array<string | null>>}
     * @memberof UserDetails
     */
    languages: Array<Array<string | null>>;
    /**
     * 
     * @type {Array<Array<string | null>>}
     * @memberof UserDetails
     */
    other: Array<Array<string | null>>;
    /**
     * 
     * @type {Array<Array<string | null>>}
     * @memberof UserDetails
     */
    hobbies: Array<Array<string | null>>;
}

/**
 * Check if a given object implements the UserDetails interface.
 */
export function instanceOfUserDetails(value: object): value is UserDetails {
    if (!('info' in value) || value['info'] === undefined) return false;
    if (!('certificates' in value) || value['certificates'] === undefined) return false;
    if (!('education' in value) || value['education'] === undefined) return false;
    if (!('skills' in value) || value['skills'] === undefined) return false;
    if (!('projects' in value) || value['projects'] === undefined) return false;
    if (!('languages' in value) || value['languages'] === undefined) return false;
    if (!('other' in value) || value['other'] === undefined) return false;
    if (!('hobbies' in value) || value['hobbies'] === undefined) return false;
    return true;
}

export function UserDetailsFromJSON(json: any): UserDetails {
    return UserDetailsFromJSONTyped(json, false);
}

export function UserDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'info': json['info'],
        'certificates': json['certificates'],
        'education': json['education'],
        'skills': json['skills'],
        'projects': json['projects'],
        'languages': json['languages'],
        'other': json['other'],
        'hobbies': json['hobbies'],
    };
}

export function UserDetailsToJSON(json: any): UserDetails {
    return UserDetailsToJSONTyped(json, false);
}

export function UserDetailsToJSONTyped(value?: UserDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'info': value['info'],
        'certificates': value['certificates'],
        'education': value['education'],
        'skills': value['skills'],
        'projects': value['projects'],
        'languages': value['languages'],
        'other': value['other'],
        'hobbies': value['hobbies'],
    };
}

